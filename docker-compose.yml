version: "3.8"

volumes:
  db_data:


services:
  nginx:
    image: "nginx:stable-alpine"
    ports:
      - "8099:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app:/app
    # this is used to link the nginx container with the php container
    # also docker compose up command will not start other containers that are not linked 
    # ( composer and artisan) , which we will call explicitely with docker-compose run command (see Readme.md file)  
    depends_on:
      - mysql
      - app

  app:
    build:
      context: php
      dockerfile: php.Dockerfile
    env_file:
      - environments/php_app.env    
    volumes:
      - ./app:/app
      # this is to provide customised php.ini file to the php container
      - ./php/php.ini:/usr/local/etc/php/conf.d/php.ini

  mysql:
    image: mysql:8.0
    ports:
      - "3333:3306"
    env_file:
      - environments/mysql.env
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"


  #service containers to run composer and artisan commands explicitly to perform specific tasks ( see Readme.md file)
  composer:
    image: composer:latest
    volumes:
      - ./app:/app
    working_dir: /app 
    entrypoint: ["composer", "--ignore-platform-reqs"]

  artisan:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./app:/app
    #specify the working directory of artisan command  
    entrypoint: ["php", "/app/artisan"]